// generated by: https://github.com/igr/gradle-template
// template: maven-java:v1.0.0

plugins {
    id 'io.codearte.nexus-staging' version '0.11.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'io.codearte.nexus-staging'

group = '{{ (ds "prj").group }}'
version = '{{ (ds "prj").version }}'

sourceCompatibility = {{ (ds "prj").java }}
targetCompatibility = {{ (ds "prj").java }}

rootProject.description = '{{ (ds "prj").description }}'

dependencies {
    {{- range $key, $value := (ds "prj").compile }}
    compile "{{ $value }}"
    {{- end }}
    {{- range $key, $value := (ds "prj").test }}
    testCompile "{{ $value }}"
    {{- end }}
    testImplementation 'org.junit.jupiter:junit-jupiter-api:{{ (ds "prj").junit }}'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:{{ (ds "prj").junit }}'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

{{ file.Read (print .Env.DIR "/_g/javadoc-disable-warnings.gradle") }}

{{ file.Read (print .Env.DIR "/_g/test5.gradle") }}

{{ file.Read (print .Env.DIR "/_g/jacoco-reports.gradle") }}

//
// MAVEN
//

{{ file.Read (print .Env.DIR "/_g/maven-sign-publish.gradle") }}

def customizePom(pom, gradleProject) {
    pom.withXml {
        def root = asNode()

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            name '{{ (ds "prj").name }}'
            description gradleProject.description
            url 'https://githu.com/{{ (ds "prj").github }}'
            organization {
            {{- range $key, $value := (ds "org").organization }}
                {{ $key }} '{{ $value }}'
            {{- end }}
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/{{ (ds "prj").github }}/issues'
            }
            licenses {
                license {
                    name '{{ (ds "prj").license }}'
                    url 'https://github.com/{{ (ds "prj").github }}/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/{{ (ds "prj").github }}'
                connection 'scm:git:git://github.com/{{ (ds "prj").github }}.git'
                developerConnection 'scm:git:ssh://git@github.com/{{ (ds "prj").github }}.git'
            }
            developers {
            {{- range $key, $value := (ds "org").developers }}
                developer {
                    {{- range $key1, $value1 := $value }}
                    {{ $key1 }} '{{ $value1 }}'
                    {{- end }}
                }
            {{- end }}
            }
        }
    }
}

{{ file.Read (print .Env.DIR "/_g/install.gradle") }}

//
// RELEASE
//

task release() {
    group 'Project'
    description 'Builds everything for the release.'

    dependsOn build
    dependsOn javadoc
    dependsOn jacocoTestReport
}

//
// WRAPPER
//

task wrapper(type: Wrapper) {
	gradleVersion = '4.6'
}